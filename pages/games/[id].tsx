import type { NextPage } from "next";
import { GetStaticProps, GetStaticPaths } from "next";
import { InferGetStaticPropsType } from "next";
import { useRouter } from "next/router";
import Head from "next/head";

// WS
import commWS from "../../interface/interface_ws";

// COMPONENTS
import GameDetails from "../../components/Games/GameDetails";

// LIBRARIES
import { motion } from "framer-motion";

// ANIMATIONS
import { fadeInUp } from "../../animations";

const GameDetail: NextPage = (props: InferGetStaticPropsType<typeof getStaticProps>) => {
      const router = useRouter();

      if (router.isFallback) {
            return <h1>Loading...</h1>;
      }

      return (
            <>
                  <Head>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                        <title>Ignite | {props.currentGame.data.name}</title>
                  </Head>

                  <motion.div variants={fadeInUp} initial="hidden" animate="show" exit="exit">
                        <main>
                              <GameDetails gameInfo={props.currentGame} />
                        </main>
                  </motion.div>
            </>
      );
};

export const getStaticPaths: GetStaticPaths = async () => {
      const result = await commWS.current_games();

      interface Game {
            id: number;
      }

      const paths = result.data.map((game: Game) => {
            return { params: { id: game.id.toString() } };
      });

      return {
            paths: paths,
            fallback: true,
      };
};

export const getStaticProps: GetStaticProps = async (context) => {
      const result = await commWS.game_detail(context?.params?.id!);

      if (result.error) {
            return {
                  notFound: true,
            };
      }

      return {
            props: {
                  currentGame: result,
            },
            revalidate: 604800, // 1 week
      };
};

export default GameDetail;
